package Projects;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.PathIterator;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;

import javax.swing.JPanel;

public class BufferedImagePaintTest extends JPanel{
	JPanel pane;
	boolean paintMode;
	boolean isClicked;
	Point click;
	
	public BufferedImagePaintTest(){
		this.setBackground(Color.white);
		this.setLayout(null);
		pane= new JPanel();
		this.add(pane);
		pane.setLayout(null);
		isClicked=false;
		addMouseListeners();
	}
	private void addMouseListeners() {
		pane.addMouseListener(new MouseListener() {

			@Override
			public void mouseClicked(MouseEvent e) {
				click= e.getPoint();
				
			}

			@Override
			public void mousePressed(MouseEvent e) {
				click= e.getPoint();
				
			}

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
		});

		pane.addMouseMotionListener(new MouseMotionListener() {

			@Override
			public void mouseDragged(MouseEvent e) {
				if(click==null) {
					click= e.getPoint();
				}
				Graphics2D g2= (Graphics2D) pane.getGraphics();
				Shape circle = new Ellipse2D.Float(e.getX(), e.getY(),300.0f, 300.0f);
				
				g2.setStroke(new BasicStroke(10.0f)); 
				g2.draw(circle);
				
				/*
				g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
				g2.setColor(Color.black);
				
				Ellipse2D shape = new Ellipse2D.Double(0,0,1,1);
				g2.getStroke().createStrokedShape(shape);
				Stroke stroke = ne
	
				g2.drawLine((int)click.getX(),(int)click.getY(), e.getX(), e.getY());*/
				click=e.getPoint();
						
			}

			@Override
			public void mouseMoved(MouseEvent e) {
						
				
			}
			
		});
	}
	public void setSize(int width, int height) {
		super.setSize(width, height);
		pane.setSize(width, height);
		pane.setLocation(0, 0);
	}
}
