package Projects;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.PathIterator;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import javax.swing.JPanel;

public class BufferedImagePaintTest extends JPanel{
	JPanel pane;
	boolean paintMode;
	boolean isClicked;
	Point click;
	BufferedImage currentIm;
	ArrayList<BufferedImage>graphics;
	
	public BufferedImagePaintTest(){
	
		this.setOpaque(false);
		this.setLayout(null);
		pane= new JPanel() {
			public void paint(Graphics g) {
				Graphics2D g2= (Graphics2D) g.create();
			
				for(int i=0;i<graphics.size();i++) {
					g2.drawImage(graphics.get(i),this.getWidth(),this.getHeight(),null);
				System.out.println("PAINT");	
				}
			
				
				super.paint(g);
			}
		};
		this.add(pane);
		pane.setLayout(null);
		isClicked=false;
		graphics = new ArrayList<BufferedImage>();
		addMouseListeners();
		pane.setOpaque(false);
	}
	private void addMouseListeners() {
		pane.addMouseListener(new MouseListener() {

			@Override
			public void mouseClicked(MouseEvent e) {
				click= e.getPoint();
				
			}

			@Override
			public void mousePressed(MouseEvent e) {
				click= e.getPoint();
				
			}

			@Override
			public void mouseReleased(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseEntered(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}

			@Override
			public void mouseExited(MouseEvent e) {
				// TODO Auto-generated method stub
				
			}
			
		});

		pane.addMouseMotionListener(new MouseMotionListener() {

			@Override
			public void mouseDragged(MouseEvent e) {
				if(click==null) {
					click= e.getPoint();
				}
				BufferedImage im = graphics.get(graphics.size()-1);
				Graphics2D g2= (Graphics2D) im.getGraphics();
				BasicStroke stroke= new BasicStroke(20,BasicStroke.CAP_ROUND,BasicStroke.JOIN_ROUND);
				g2.setColor(Color.white);
				g2.setStroke(stroke);
				g2.drawLine((int)click.getX(), (int)click.getY(), e.getX(), e.getY());
				//g2.drawImage(currentIm,pane.getWidth(),pane.getHeight(),null);
				
				graphics.remove(im);
				graphics.add(im);
				pane.repaint();
				
				click=e.getPoint();
				g2.dispose();
						
			}

			@Override
			public void mouseMoved(MouseEvent e) {
						
				
			}
			
		});
	}
	public void setSize(int width, int height) {
		super.setSize(width, height);
		pane.setSize(width, height);
		pane.setLocation(0, 0);
		newLayer(width, height);
	}
	private void newLayer(int width, int height) {
		BufferedImage im= new BufferedImage(width,height, BufferedImage.TYPE_INT_ARGB);
		currentIm= im;
		graphics.add(im);
	}


}
